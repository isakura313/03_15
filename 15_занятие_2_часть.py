# -*- coding: utf-8 -*-
"""15 занятие 2 часть.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RFin8HeBn-snjfJ_P4_hnzyRF7UWjM7f
"""

pip install python-telegram-bot

pip install -U ipykernel

import logging
from telegram.ext import Updater, CommandHandler 
""" CommandHadler для обработка команды через / типа /hello Updater рассылает сообщения с тем временем, как мы хотим"""
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level= logging.INFO)
logger = logging.getLogger(__name__)

#Определим наши основные команды
def start(update, context):
  update.message.reply_text('Привет!  Используй /set <seconds> чтобы установить таймер')


def alarm(context):
  """устанавливаем значение нашего дела """
  job = context.job
  context.bot.send_message(job.context, text="Тебя даже вчерашний шторм не разбудил!")

def set_timer(update, context):
  """ Добавление занятия для нашего бота в очередь"""
  chat_id = update.message.chat_id
  try:
    #args[0] должен содержать количество времени, т. е. должен быть числом в секундах
    due = int(context.args[0])
    if due < 0:
      update.message.reply_text("нельзя пустить время вспять")
      return
    #Добавляем наше дело в очередь и обноляем сроки, если есть один такой
    if "job" in context.chat_data:
      old_job = context.chat_data['job']
      old_job.shedule_removal()
    new_job = context.job_queue.run_once(alarm, due, context= chat_id)
    context.chat_data['job'] = new_job

    update.message.reply_text("Таймер был установлен")
  except(IndexError, ValueError):
    update.message.reply_text("Что ты там вообще наначил? Надо было секунды!")

def unset(update, context):
  "Добавим функцию удаления занятия, если пользователь к примеру передумал"
  if'job' not in context.chat_data:
    update.message.reply_text("У вас нет активного таймера")
    return
  job = context.chat_data['job']
  job.schedule_removal()
  del context.chat_data['job']

def error(update, context):
  """ Ошибки связанные с попыткой отправить сообщение """
  logger.warning('Update "%s" привели к ошибке "%s"', update, context.error)



def main():
  """ Запуск нашего бота"""
  updater = Updater("1224229009:AAGTPwdUO0Orgafshln4svSYsOjPSnj6nkg", use_context = True)
  dp = updater.dispatcher


  dp.add_handler(CommandHandler("start", start))
  dp.add_handler(CommandHandler("help", start))
  dp.add_handler(CommandHandler("set", set_timer, 
                                    pass_args = True,
                                  pass_job_queue = True,
                                  pass_chat_data = True))
  dp.add_handler(CommandHandler("unset", unset, pass_chat_data = True))
  dp.add_error_handler(error)

  updater.start_polling()
  updater.idle()



if __name__ == "__main__":
  main()